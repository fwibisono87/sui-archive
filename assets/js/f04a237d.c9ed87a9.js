"use strict";(self.webpackChunksui_archive=self.webpackChunksui_archive||[]).push([[6918],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||r;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2554:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const r={sidebar_position:6},l="yt-dlp",i={unversionedId:"tools/yt-dlp",id:"tools/yt-dlp",title:"yt-dlp",description:"Supported: YouTube, SPWN, and everything on this list!",source:"@site/docs/tools/yt-dlp.md",sourceDirName:"tools",slug:"/tools/yt-dlp",permalink:"/sui-archive/docs/tools/yt-dlp",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tools/yt-dlp.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"ffmpeg",permalink:"/sui-archive/docs/tools/ffmpeg"},next:{title:"yeet",permalink:"/sui-archive/docs/category/yeet"}},s={},p=[{value:"What does this tool do?",id:"what-does-this-tool-do",level:2},{value:"Installation",id:"installation",level:2},{value:"Windows",id:"windows",level:3},{value:"Linux",id:"linux",level:3},{value:"Installation using binaries",id:"installation-using-binaries",level:4},{value:"Installation using pip",id:"installation-using-pip",level:4},{value:"Basic Usage",id:"basic-usage",level:2}],u={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"yt-dlp"},"yt-dlp"),(0,o.kt)("p",null,"Supported: YouTube, SPWN, and ",(0,o.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/supportedsites.md"},"everything on this list!")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/yt-dlp/yt-dlp"},(0,o.kt)("inlineCode",{parentName:"a"},"yt-dlp"))," is a fork of ",(0,o.kt)("a",{parentName:"p",href:"https://ytdl-org.github.io/youtube-dl/"},(0,o.kt)("inlineCode",{parentName:"a"},"youtube-dl")),', a "Command-line program to download videos from YouTube.com and other video sites", which I find to be more convenient and more-feature complete in most circumstances.'),(0,o.kt)("p",null,"As with most options on this guide, I would assume that you are comfortable with using Command-Line interfaces. However, it is not nescessary. Just follow along, and you'll be fine!"),(0,o.kt)("h2",{id:"what-does-this-tool-do"},"What does this tool do?"),(0,o.kt)("p",null,"As of November 2020, YouTube stores its high-quality videos in seperate audio and video streams. As (presumably) you want to save the best possible video and audio, we need to download ",(0,o.kt)("em",{parentName:"p"},"both")," streams then merge them to a single file. "),(0,o.kt)("p",null,"To be able to merge said files, we need to defer the process to ",(0,o.kt)("a",{parentName:"p",href:"/docs/tools/ffmpeg/"},"ffmpeg"),"."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("h3",{id:"windows"},"Windows"),(0,o.kt)("p",null,"Download the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/yt-dlp/yt-dlp/releases"},"latest release")," (Preferrably the ",(0,o.kt)("inlineCode",{parentName:"p"},".exe"),"). You can run it as-is by opening PowerShell on your downloads folder, and typing in"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"./yt-dlp\n")),(0,o.kt)("p",null,"This command should return"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"PS D:\\Users\\sui\\Downloads> ./yt-dlp\n\nUsage: yt-dlp.exe [OPTIONS] URL [URL...]\n\nyt-dlp.exe: error: You must provide at least one URL.\nType yt-dlp --help to see a list of all options.\n")),(0,o.kt)("h3",{id:"linux"},"Linux"),(0,o.kt)("p",null,"Using your favourite package manager (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"apt")," for ubuntu, or ",(0,o.kt)("inlineCode",{parentName:"p"},"aur")," for arch), install the following packages:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"python3\npython3-pip\npython-is-python3\natomicparsley\n")),(0,o.kt)("p",null,"Installation of ",(0,o.kt)("inlineCode",{parentName:"p"},"yt-dlp")," itself can be achieved in 2 ways, either by directly getting the precompiled binaries directly or using ",(0,o.kt)("a",{parentName:"p",href:"https://pypi.org/project/pip/"},"pip"),"(Python's Package Manager)"),(0,o.kt)("h4",{id:"installation-using-binaries"},"Installation using binaries"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /usr/local/bin/yt-dlp\n# Downloads the latest release from GitHub and stores it in /usr/local/bin/yt-dlp\n# You can also use, in place of curl, wget and aria2c\nsudo chmod a+rx /usr/local/bin/youtube-dl\n# Grants read and execute permissions to all users for yt-dlp\n")),(0,o.kt)("h4",{id:"installation-using-pip"},"Installation using pip"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo -H python3 -m pip install -U yt-dlp \n# Installs yt-dlp globally\n")),(0,o.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,o.kt)("p",null,"In the simplest of terms, you can download a video just with the following command.\nAssuming you want to download ",(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=a51VH9BYzZA"},"Suisei's Stellar Stellar")," with the url ",(0,o.kt)("inlineCode",{parentName:"p"},"https://www.youtube.com/watch?v=a51VH9BYzZA")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'yt-dlp "https://www.youtube.com/watch?v=a51VH9BYzZA"\n')))}d.isMDXComponent=!0}}]);